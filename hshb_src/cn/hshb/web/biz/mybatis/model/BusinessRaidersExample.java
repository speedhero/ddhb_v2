package cn.hshb.web.biz.mybatis.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class BusinessRaidersExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table business_raiders
     *
     * @mbggenerated Wed Jul 08 19:17:39 GMT+08:00 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table business_raiders
     *
     * @mbggenerated Wed Jul 08 19:17:39 GMT+08:00 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table business_raiders
     *
     * @mbggenerated Wed Jul 08 19:17:39 GMT+08:00 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table business_raiders
     *
     * @mbggenerated Wed Jul 08 19:17:39 GMT+08:00 2015
     */
    public BusinessRaidersExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table business_raiders
     *
     * @mbggenerated Wed Jul 08 19:17:39 GMT+08:00 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table business_raiders
     *
     * @mbggenerated Wed Jul 08 19:17:39 GMT+08:00 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table business_raiders
     *
     * @mbggenerated Wed Jul 08 19:17:39 GMT+08:00 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table business_raiders
     *
     * @mbggenerated Wed Jul 08 19:17:39 GMT+08:00 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table business_raiders
     *
     * @mbggenerated Wed Jul 08 19:17:39 GMT+08:00 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table business_raiders
     *
     * @mbggenerated Wed Jul 08 19:17:39 GMT+08:00 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table business_raiders
     *
     * @mbggenerated Wed Jul 08 19:17:39 GMT+08:00 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table business_raiders
     *
     * @mbggenerated Wed Jul 08 19:17:39 GMT+08:00 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table business_raiders
     *
     * @mbggenerated Wed Jul 08 19:17:39 GMT+08:00 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table business_raiders
     *
     * @mbggenerated Wed Jul 08 19:17:39 GMT+08:00 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table business_raiders
     *
     * @mbggenerated Wed Jul 08 19:17:39 GMT+08:00 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andRaiderIdIsNull() {
            addCriterion("raider_id is null");
            return (Criteria) this;
        }

        public Criteria andRaiderIdIsNotNull() {
            addCriterion("raider_id is not null");
            return (Criteria) this;
        }

        public Criteria andRaiderIdEqualTo(Integer value) {
            addCriterion("raider_id =", value, "raiderId");
            return (Criteria) this;
        }

        public Criteria andRaiderIdNotEqualTo(Integer value) {
            addCriterion("raider_id <>", value, "raiderId");
            return (Criteria) this;
        }

        public Criteria andRaiderIdGreaterThan(Integer value) {
            addCriterion("raider_id >", value, "raiderId");
            return (Criteria) this;
        }

        public Criteria andRaiderIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("raider_id >=", value, "raiderId");
            return (Criteria) this;
        }

        public Criteria andRaiderIdLessThan(Integer value) {
            addCriterion("raider_id <", value, "raiderId");
            return (Criteria) this;
        }

        public Criteria andRaiderIdLessThanOrEqualTo(Integer value) {
            addCriterion("raider_id <=", value, "raiderId");
            return (Criteria) this;
        }

        public Criteria andRaiderIdIn(List<Integer> values) {
            addCriterion("raider_id in", values, "raiderId");
            return (Criteria) this;
        }

        public Criteria andRaiderIdNotIn(List<Integer> values) {
            addCriterion("raider_id not in", values, "raiderId");
            return (Criteria) this;
        }

        public Criteria andRaiderIdBetween(Integer value1, Integer value2) {
            addCriterion("raider_id between", value1, value2, "raiderId");
            return (Criteria) this;
        }

        public Criteria andRaiderIdNotBetween(Integer value1, Integer value2) {
            addCriterion("raider_id not between", value1, value2, "raiderId");
            return (Criteria) this;
        }

        public Criteria andRaiderNameIsNull() {
            addCriterion("raider_name is null");
            return (Criteria) this;
        }

        public Criteria andRaiderNameIsNotNull() {
            addCriterion("raider_name is not null");
            return (Criteria) this;
        }

        public Criteria andRaiderNameEqualTo(String value) {
            addCriterion("raider_name =", value, "raiderName");
            return (Criteria) this;
        }

        public Criteria andRaiderNameNotEqualTo(String value) {
            addCriterion("raider_name <>", value, "raiderName");
            return (Criteria) this;
        }

        public Criteria andRaiderNameGreaterThan(String value) {
            addCriterion("raider_name >", value, "raiderName");
            return (Criteria) this;
        }

        public Criteria andRaiderNameGreaterThanOrEqualTo(String value) {
            addCriterion("raider_name >=", value, "raiderName");
            return (Criteria) this;
        }

        public Criteria andRaiderNameLessThan(String value) {
            addCriterion("raider_name <", value, "raiderName");
            return (Criteria) this;
        }

        public Criteria andRaiderNameLessThanOrEqualTo(String value) {
            addCriterion("raider_name <=", value, "raiderName");
            return (Criteria) this;
        }

        public Criteria andRaiderNameLike(String value) {
            addCriterion("raider_name like", value, "raiderName");
            return (Criteria) this;
        }

        public Criteria andRaiderNameNotLike(String value) {
            addCriterion("raider_name not like", value, "raiderName");
            return (Criteria) this;
        }

        public Criteria andRaiderNameIn(List<String> values) {
            addCriterion("raider_name in", values, "raiderName");
            return (Criteria) this;
        }

        public Criteria andRaiderNameNotIn(List<String> values) {
            addCriterion("raider_name not in", values, "raiderName");
            return (Criteria) this;
        }

        public Criteria andRaiderNameBetween(String value1, String value2) {
            addCriterion("raider_name between", value1, value2, "raiderName");
            return (Criteria) this;
        }

        public Criteria andRaiderNameNotBetween(String value1, String value2) {
            addCriterion("raider_name not between", value1, value2, "raiderName");
            return (Criteria) this;
        }

        public Criteria andIntroductionIsNull() {
            addCriterion("introduction is null");
            return (Criteria) this;
        }

        public Criteria andIntroductionIsNotNull() {
            addCriterion("introduction is not null");
            return (Criteria) this;
        }

        public Criteria andIntroductionEqualTo(String value) {
            addCriterion("introduction =", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionNotEqualTo(String value) {
            addCriterion("introduction <>", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionGreaterThan(String value) {
            addCriterion("introduction >", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionGreaterThanOrEqualTo(String value) {
            addCriterion("introduction >=", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionLessThan(String value) {
            addCriterion("introduction <", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionLessThanOrEqualTo(String value) {
            addCriterion("introduction <=", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionLike(String value) {
            addCriterion("introduction like", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionNotLike(String value) {
            addCriterion("introduction not like", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionIn(List<String> values) {
            addCriterion("introduction in", values, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionNotIn(List<String> values) {
            addCriterion("introduction not in", values, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionBetween(String value1, String value2) {
            addCriterion("introduction between", value1, value2, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionNotBetween(String value1, String value2) {
            addCriterion("introduction not between", value1, value2, "introduction");
            return (Criteria) this;
        }

        public Criteria andPublishDateIsNull() {
            addCriterion("publish_date is null");
            return (Criteria) this;
        }

        public Criteria andPublishDateIsNotNull() {
            addCriterion("publish_date is not null");
            return (Criteria) this;
        }

        public Criteria andPublishDateEqualTo(Date value) {
            addCriterionForJDBCDate("publish_date =", value, "publishDate");
            return (Criteria) this;
        }

        public Criteria andPublishDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("publish_date <>", value, "publishDate");
            return (Criteria) this;
        }

        public Criteria andPublishDateGreaterThan(Date value) {
            addCriterionForJDBCDate("publish_date >", value, "publishDate");
            return (Criteria) this;
        }

        public Criteria andPublishDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("publish_date >=", value, "publishDate");
            return (Criteria) this;
        }

        public Criteria andPublishDateLessThan(Date value) {
            addCriterionForJDBCDate("publish_date <", value, "publishDate");
            return (Criteria) this;
        }

        public Criteria andPublishDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("publish_date <=", value, "publishDate");
            return (Criteria) this;
        }

        public Criteria andPublishDateIn(List<Date> values) {
            addCriterionForJDBCDate("publish_date in", values, "publishDate");
            return (Criteria) this;
        }

        public Criteria andPublishDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("publish_date not in", values, "publishDate");
            return (Criteria) this;
        }

        public Criteria andPublishDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("publish_date between", value1, value2, "publishDate");
            return (Criteria) this;
        }

        public Criteria andPublishDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("publish_date not between", value1, value2, "publishDate");
            return (Criteria) this;
        }

        public Criteria andPublishMarkerIsNull() {
            addCriterion("publish_marker is null");
            return (Criteria) this;
        }

        public Criteria andPublishMarkerIsNotNull() {
            addCriterion("publish_marker is not null");
            return (Criteria) this;
        }

        public Criteria andPublishMarkerEqualTo(Integer value) {
            addCriterion("publish_marker =", value, "publishMarker");
            return (Criteria) this;
        }

        public Criteria andPublishMarkerNotEqualTo(Integer value) {
            addCriterion("publish_marker <>", value, "publishMarker");
            return (Criteria) this;
        }

        public Criteria andPublishMarkerGreaterThan(Integer value) {
            addCriterion("publish_marker >", value, "publishMarker");
            return (Criteria) this;
        }

        public Criteria andPublishMarkerGreaterThanOrEqualTo(Integer value) {
            addCriterion("publish_marker >=", value, "publishMarker");
            return (Criteria) this;
        }

        public Criteria andPublishMarkerLessThan(Integer value) {
            addCriterion("publish_marker <", value, "publishMarker");
            return (Criteria) this;
        }

        public Criteria andPublishMarkerLessThanOrEqualTo(Integer value) {
            addCriterion("publish_marker <=", value, "publishMarker");
            return (Criteria) this;
        }

        public Criteria andPublishMarkerIn(List<Integer> values) {
            addCriterion("publish_marker in", values, "publishMarker");
            return (Criteria) this;
        }

        public Criteria andPublishMarkerNotIn(List<Integer> values) {
            addCriterion("publish_marker not in", values, "publishMarker");
            return (Criteria) this;
        }

        public Criteria andPublishMarkerBetween(Integer value1, Integer value2) {
            addCriterion("publish_marker between", value1, value2, "publishMarker");
            return (Criteria) this;
        }

        public Criteria andPublishMarkerNotBetween(Integer value1, Integer value2) {
            addCriterion("publish_marker not between", value1, value2, "publishMarker");
            return (Criteria) this;
        }

        public Criteria andCreateDateIsNull() {
            addCriterion("create_date is null");
            return (Criteria) this;
        }

        public Criteria andCreateDateIsNotNull() {
            addCriterion("create_date is not null");
            return (Criteria) this;
        }

        public Criteria andCreateDateEqualTo(Date value) {
            addCriterionForJDBCDate("create_date =", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("create_date <>", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateGreaterThan(Date value) {
            addCriterionForJDBCDate("create_date >", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("create_date >=", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateLessThan(Date value) {
            addCriterionForJDBCDate("create_date <", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("create_date <=", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateIn(List<Date> values) {
            addCriterionForJDBCDate("create_date in", values, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("create_date not in", values, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("create_date between", value1, value2, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("create_date not between", value1, value2, "createDate");
            return (Criteria) this;
        }

        public Criteria andPegeContentIsNull() {
            addCriterion("pege_content is null");
            return (Criteria) this;
        }

        public Criteria andPegeContentIsNotNull() {
            addCriterion("pege_content is not null");
            return (Criteria) this;
        }

        public Criteria andPegeContentEqualTo(String value) {
            addCriterion("pege_content =", value, "pegeContent");
            return (Criteria) this;
        }

        public Criteria andPegeContentNotEqualTo(String value) {
            addCriterion("pege_content <>", value, "pegeContent");
            return (Criteria) this;
        }

        public Criteria andPegeContentGreaterThan(String value) {
            addCriterion("pege_content >", value, "pegeContent");
            return (Criteria) this;
        }

        public Criteria andPegeContentGreaterThanOrEqualTo(String value) {
            addCriterion("pege_content >=", value, "pegeContent");
            return (Criteria) this;
        }

        public Criteria andPegeContentLessThan(String value) {
            addCriterion("pege_content <", value, "pegeContent");
            return (Criteria) this;
        }

        public Criteria andPegeContentLessThanOrEqualTo(String value) {
            addCriterion("pege_content <=", value, "pegeContent");
            return (Criteria) this;
        }

        public Criteria andPegeContentLike(String value) {
            addCriterion("pege_content like", value, "pegeContent");
            return (Criteria) this;
        }

        public Criteria andPegeContentNotLike(String value) {
            addCriterion("pege_content not like", value, "pegeContent");
            return (Criteria) this;
        }

        public Criteria andPegeContentIn(List<String> values) {
            addCriterion("pege_content in", values, "pegeContent");
            return (Criteria) this;
        }

        public Criteria andPegeContentNotIn(List<String> values) {
            addCriterion("pege_content not in", values, "pegeContent");
            return (Criteria) this;
        }

        public Criteria andPegeContentBetween(String value1, String value2) {
            addCriterion("pege_content between", value1, value2, "pegeContent");
            return (Criteria) this;
        }

        public Criteria andPegeContentNotBetween(String value1, String value2) {
            addCriterion("pege_content not between", value1, value2, "pegeContent");
            return (Criteria) this;
        }

        public Criteria andDeleteMarkerIsNull() {
            addCriterion("delete_marker is null");
            return (Criteria) this;
        }

        public Criteria andDeleteMarkerIsNotNull() {
            addCriterion("delete_marker is not null");
            return (Criteria) this;
        }

        public Criteria andDeleteMarkerEqualTo(Integer value) {
            addCriterion("delete_marker =", value, "deleteMarker");
            return (Criteria) this;
        }

        public Criteria andDeleteMarkerNotEqualTo(Integer value) {
            addCriterion("delete_marker <>", value, "deleteMarker");
            return (Criteria) this;
        }

        public Criteria andDeleteMarkerGreaterThan(Integer value) {
            addCriterion("delete_marker >", value, "deleteMarker");
            return (Criteria) this;
        }

        public Criteria andDeleteMarkerGreaterThanOrEqualTo(Integer value) {
            addCriterion("delete_marker >=", value, "deleteMarker");
            return (Criteria) this;
        }

        public Criteria andDeleteMarkerLessThan(Integer value) {
            addCriterion("delete_marker <", value, "deleteMarker");
            return (Criteria) this;
        }

        public Criteria andDeleteMarkerLessThanOrEqualTo(Integer value) {
            addCriterion("delete_marker <=", value, "deleteMarker");
            return (Criteria) this;
        }

        public Criteria andDeleteMarkerIn(List<Integer> values) {
            addCriterion("delete_marker in", values, "deleteMarker");
            return (Criteria) this;
        }

        public Criteria andDeleteMarkerNotIn(List<Integer> values) {
            addCriterion("delete_marker not in", values, "deleteMarker");
            return (Criteria) this;
        }

        public Criteria andDeleteMarkerBetween(Integer value1, Integer value2) {
            addCriterion("delete_marker between", value1, value2, "deleteMarker");
            return (Criteria) this;
        }

        public Criteria andDeleteMarkerNotBetween(Integer value1, Integer value2) {
            addCriterion("delete_marker not between", value1, value2, "deleteMarker");
            return (Criteria) this;
        }

        public Criteria andRaiderTypeIsNull() {
            addCriterion("raider_type is null");
            return (Criteria) this;
        }

        public Criteria andRaiderTypeIsNotNull() {
            addCriterion("raider_type is not null");
            return (Criteria) this;
        }

        public Criteria andRaiderTypeEqualTo(Integer value) {
            addCriterion("raider_type =", value, "raiderType");
            return (Criteria) this;
        }

        public Criteria andRaiderTypeNotEqualTo(Integer value) {
            addCriterion("raider_type <>", value, "raiderType");
            return (Criteria) this;
        }

        public Criteria andRaiderTypeGreaterThan(Integer value) {
            addCriterion("raider_type >", value, "raiderType");
            return (Criteria) this;
        }

        public Criteria andRaiderTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("raider_type >=", value, "raiderType");
            return (Criteria) this;
        }

        public Criteria andRaiderTypeLessThan(Integer value) {
            addCriterion("raider_type <", value, "raiderType");
            return (Criteria) this;
        }

        public Criteria andRaiderTypeLessThanOrEqualTo(Integer value) {
            addCriterion("raider_type <=", value, "raiderType");
            return (Criteria) this;
        }

        public Criteria andRaiderTypeIn(List<Integer> values) {
            addCriterion("raider_type in", values, "raiderType");
            return (Criteria) this;
        }

        public Criteria andRaiderTypeNotIn(List<Integer> values) {
            addCriterion("raider_type not in", values, "raiderType");
            return (Criteria) this;
        }

        public Criteria andRaiderTypeBetween(Integer value1, Integer value2) {
            addCriterion("raider_type between", value1, value2, "raiderType");
            return (Criteria) this;
        }

        public Criteria andRaiderTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("raider_type not between", value1, value2, "raiderType");
            return (Criteria) this;
        }

        public Criteria andEditDateIsNull() {
            addCriterion("edit_date is null");
            return (Criteria) this;
        }

        public Criteria andEditDateIsNotNull() {
            addCriterion("edit_date is not null");
            return (Criteria) this;
        }

        public Criteria andEditDateEqualTo(Date value) {
            addCriterionForJDBCDate("edit_date =", value, "editDate");
            return (Criteria) this;
        }

        public Criteria andEditDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("edit_date <>", value, "editDate");
            return (Criteria) this;
        }

        public Criteria andEditDateGreaterThan(Date value) {
            addCriterionForJDBCDate("edit_date >", value, "editDate");
            return (Criteria) this;
        }

        public Criteria andEditDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("edit_date >=", value, "editDate");
            return (Criteria) this;
        }

        public Criteria andEditDateLessThan(Date value) {
            addCriterionForJDBCDate("edit_date <", value, "editDate");
            return (Criteria) this;
        }

        public Criteria andEditDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("edit_date <=", value, "editDate");
            return (Criteria) this;
        }

        public Criteria andEditDateIn(List<Date> values) {
            addCriterionForJDBCDate("edit_date in", values, "editDate");
            return (Criteria) this;
        }

        public Criteria andEditDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("edit_date not in", values, "editDate");
            return (Criteria) this;
        }

        public Criteria andEditDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("edit_date between", value1, value2, "editDate");
            return (Criteria) this;
        }

        public Criteria andEditDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("edit_date not between", value1, value2, "editDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table business_raiders
     *
     * @mbggenerated do_not_delete_during_merge Wed Jul 08 19:17:39 GMT+08:00 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table business_raiders
     *
     * @mbggenerated Wed Jul 08 19:17:39 GMT+08:00 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}