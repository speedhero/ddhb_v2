package cn.hshb.web.biz.mybatis.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class HouseCommunityAveragePriceExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table house_community_average_price
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table house_community_average_price
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table house_community_average_price
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house_community_average_price
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public HouseCommunityAveragePriceExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house_community_average_price
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house_community_average_price
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house_community_average_price
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house_community_average_price
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house_community_average_price
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house_community_average_price
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house_community_average_price
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house_community_average_price
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house_community_average_price
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house_community_average_price
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table house_community_average_price
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCommunityIdIsNull() {
            addCriterion("community_id is null");
            return (Criteria) this;
        }

        public Criteria andCommunityIdIsNotNull() {
            addCriterion("community_id is not null");
            return (Criteria) this;
        }

        public Criteria andCommunityIdEqualTo(String value) {
            addCriterion("community_id =", value, "communityId");
            return (Criteria) this;
        }

        public Criteria andCommunityIdNotEqualTo(String value) {
            addCriterion("community_id <>", value, "communityId");
            return (Criteria) this;
        }

        public Criteria andCommunityIdGreaterThan(String value) {
            addCriterion("community_id >", value, "communityId");
            return (Criteria) this;
        }

        public Criteria andCommunityIdGreaterThanOrEqualTo(String value) {
            addCriterion("community_id >=", value, "communityId");
            return (Criteria) this;
        }

        public Criteria andCommunityIdLessThan(String value) {
            addCriterion("community_id <", value, "communityId");
            return (Criteria) this;
        }

        public Criteria andCommunityIdLessThanOrEqualTo(String value) {
            addCriterion("community_id <=", value, "communityId");
            return (Criteria) this;
        }

        public Criteria andCommunityIdLike(String value) {
            addCriterion("community_id like", value, "communityId");
            return (Criteria) this;
        }

        public Criteria andCommunityIdNotLike(String value) {
            addCriterion("community_id not like", value, "communityId");
            return (Criteria) this;
        }

        public Criteria andCommunityIdIn(List<String> values) {
            addCriterion("community_id in", values, "communityId");
            return (Criteria) this;
        }

        public Criteria andCommunityIdNotIn(List<String> values) {
            addCriterion("community_id not in", values, "communityId");
            return (Criteria) this;
        }

        public Criteria andCommunityIdBetween(String value1, String value2) {
            addCriterion("community_id between", value1, value2, "communityId");
            return (Criteria) this;
        }

        public Criteria andCommunityIdNotBetween(String value1, String value2) {
            addCriterion("community_id not between", value1, value2, "communityId");
            return (Criteria) this;
        }

        public Criteria andCalculatedateIsNull() {
            addCriterion("calculateDate is null");
            return (Criteria) this;
        }

        public Criteria andCalculatedateIsNotNull() {
            addCriterion("calculateDate is not null");
            return (Criteria) this;
        }

        public Criteria andCalculatedateEqualTo(Date value) {
            addCriterionForJDBCDate("calculateDate =", value, "calculatedate");
            return (Criteria) this;
        }

        public Criteria andCalculatedateNotEqualTo(Date value) {
            addCriterionForJDBCDate("calculateDate <>", value, "calculatedate");
            return (Criteria) this;
        }

        public Criteria andCalculatedateGreaterThan(Date value) {
            addCriterionForJDBCDate("calculateDate >", value, "calculatedate");
            return (Criteria) this;
        }

        public Criteria andCalculatedateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("calculateDate >=", value, "calculatedate");
            return (Criteria) this;
        }

        public Criteria andCalculatedateLessThan(Date value) {
            addCriterionForJDBCDate("calculateDate <", value, "calculatedate");
            return (Criteria) this;
        }

        public Criteria andCalculatedateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("calculateDate <=", value, "calculatedate");
            return (Criteria) this;
        }

        public Criteria andCalculatedateIn(List<Date> values) {
            addCriterionForJDBCDate("calculateDate in", values, "calculatedate");
            return (Criteria) this;
        }

        public Criteria andCalculatedateNotIn(List<Date> values) {
            addCriterionForJDBCDate("calculateDate not in", values, "calculatedate");
            return (Criteria) this;
        }

        public Criteria andCalculatedateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("calculateDate between", value1, value2, "calculatedate");
            return (Criteria) this;
        }

        public Criteria andCalculatedateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("calculateDate not between", value1, value2, "calculatedate");
            return (Criteria) this;
        }

        public Criteria andPriceAnnouncedIsNull() {
            addCriterion("price_announced is null");
            return (Criteria) this;
        }

        public Criteria andPriceAnnouncedIsNotNull() {
            addCriterion("price_announced is not null");
            return (Criteria) this;
        }

        public Criteria andPriceAnnouncedEqualTo(Float value) {
            addCriterion("price_announced =", value, "priceAnnounced");
            return (Criteria) this;
        }

        public Criteria andPriceAnnouncedNotEqualTo(Float value) {
            addCriterion("price_announced <>", value, "priceAnnounced");
            return (Criteria) this;
        }

        public Criteria andPriceAnnouncedGreaterThan(Float value) {
            addCriterion("price_announced >", value, "priceAnnounced");
            return (Criteria) this;
        }

        public Criteria andPriceAnnouncedGreaterThanOrEqualTo(Float value) {
            addCriterion("price_announced >=", value, "priceAnnounced");
            return (Criteria) this;
        }

        public Criteria andPriceAnnouncedLessThan(Float value) {
            addCriterion("price_announced <", value, "priceAnnounced");
            return (Criteria) this;
        }

        public Criteria andPriceAnnouncedLessThanOrEqualTo(Float value) {
            addCriterion("price_announced <=", value, "priceAnnounced");
            return (Criteria) this;
        }

        public Criteria andPriceAnnouncedIn(List<Float> values) {
            addCriterion("price_announced in", values, "priceAnnounced");
            return (Criteria) this;
        }

        public Criteria andPriceAnnouncedNotIn(List<Float> values) {
            addCriterion("price_announced not in", values, "priceAnnounced");
            return (Criteria) this;
        }

        public Criteria andPriceAnnouncedBetween(Float value1, Float value2) {
            addCriterion("price_announced between", value1, value2, "priceAnnounced");
            return (Criteria) this;
        }

        public Criteria andPriceAnnouncedNotBetween(Float value1, Float value2) {
            addCriterion("price_announced not between", value1, value2, "priceAnnounced");
            return (Criteria) this;
        }

        public Criteria andPriceDealedIsNull() {
            addCriterion("price_dealed is null");
            return (Criteria) this;
        }

        public Criteria andPriceDealedIsNotNull() {
            addCriterion("price_dealed is not null");
            return (Criteria) this;
        }

        public Criteria andPriceDealedEqualTo(Float value) {
            addCriterion("price_dealed =", value, "priceDealed");
            return (Criteria) this;
        }

        public Criteria andPriceDealedNotEqualTo(Float value) {
            addCriterion("price_dealed <>", value, "priceDealed");
            return (Criteria) this;
        }

        public Criteria andPriceDealedGreaterThan(Float value) {
            addCriterion("price_dealed >", value, "priceDealed");
            return (Criteria) this;
        }

        public Criteria andPriceDealedGreaterThanOrEqualTo(Float value) {
            addCriterion("price_dealed >=", value, "priceDealed");
            return (Criteria) this;
        }

        public Criteria andPriceDealedLessThan(Float value) {
            addCriterion("price_dealed <", value, "priceDealed");
            return (Criteria) this;
        }

        public Criteria andPriceDealedLessThanOrEqualTo(Float value) {
            addCriterion("price_dealed <=", value, "priceDealed");
            return (Criteria) this;
        }

        public Criteria andPriceDealedIn(List<Float> values) {
            addCriterion("price_dealed in", values, "priceDealed");
            return (Criteria) this;
        }

        public Criteria andPriceDealedNotIn(List<Float> values) {
            addCriterion("price_dealed not in", values, "priceDealed");
            return (Criteria) this;
        }

        public Criteria andPriceDealedBetween(Float value1, Float value2) {
            addCriterion("price_dealed between", value1, value2, "priceDealed");
            return (Criteria) this;
        }

        public Criteria andPriceDealedNotBetween(Float value1, Float value2) {
            addCriterion("price_dealed not between", value1, value2, "priceDealed");
            return (Criteria) this;
        }

        public Criteria andRentAveragePriceIsNull() {
            addCriterion("rent_average_price is null");
            return (Criteria) this;
        }

        public Criteria andRentAveragePriceIsNotNull() {
            addCriterion("rent_average_price is not null");
            return (Criteria) this;
        }

        public Criteria andRentAveragePriceEqualTo(Float value) {
            addCriterion("rent_average_price =", value, "rentAveragePrice");
            return (Criteria) this;
        }

        public Criteria andRentAveragePriceNotEqualTo(Float value) {
            addCriterion("rent_average_price <>", value, "rentAveragePrice");
            return (Criteria) this;
        }

        public Criteria andRentAveragePriceGreaterThan(Float value) {
            addCriterion("rent_average_price >", value, "rentAveragePrice");
            return (Criteria) this;
        }

        public Criteria andRentAveragePriceGreaterThanOrEqualTo(Float value) {
            addCriterion("rent_average_price >=", value, "rentAveragePrice");
            return (Criteria) this;
        }

        public Criteria andRentAveragePriceLessThan(Float value) {
            addCriterion("rent_average_price <", value, "rentAveragePrice");
            return (Criteria) this;
        }

        public Criteria andRentAveragePriceLessThanOrEqualTo(Float value) {
            addCriterion("rent_average_price <=", value, "rentAveragePrice");
            return (Criteria) this;
        }

        public Criteria andRentAveragePriceIn(List<Float> values) {
            addCriterion("rent_average_price in", values, "rentAveragePrice");
            return (Criteria) this;
        }

        public Criteria andRentAveragePriceNotIn(List<Float> values) {
            addCriterion("rent_average_price not in", values, "rentAveragePrice");
            return (Criteria) this;
        }

        public Criteria andRentAveragePriceBetween(Float value1, Float value2) {
            addCriterion("rent_average_price between", value1, value2, "rentAveragePrice");
            return (Criteria) this;
        }

        public Criteria andRentAveragePriceNotBetween(Float value1, Float value2) {
            addCriterion("rent_average_price not between", value1, value2, "rentAveragePrice");
            return (Criteria) this;
        }

        public Criteria andDeleteflagIsNull() {
            addCriterion("deleteflag is null");
            return (Criteria) this;
        }

        public Criteria andDeleteflagIsNotNull() {
            addCriterion("deleteflag is not null");
            return (Criteria) this;
        }

        public Criteria andDeleteflagEqualTo(Integer value) {
            addCriterion("deleteflag =", value, "deleteflag");
            return (Criteria) this;
        }

        public Criteria andDeleteflagNotEqualTo(Integer value) {
            addCriterion("deleteflag <>", value, "deleteflag");
            return (Criteria) this;
        }

        public Criteria andDeleteflagGreaterThan(Integer value) {
            addCriterion("deleteflag >", value, "deleteflag");
            return (Criteria) this;
        }

        public Criteria andDeleteflagGreaterThanOrEqualTo(Integer value) {
            addCriterion("deleteflag >=", value, "deleteflag");
            return (Criteria) this;
        }

        public Criteria andDeleteflagLessThan(Integer value) {
            addCriterion("deleteflag <", value, "deleteflag");
            return (Criteria) this;
        }

        public Criteria andDeleteflagLessThanOrEqualTo(Integer value) {
            addCriterion("deleteflag <=", value, "deleteflag");
            return (Criteria) this;
        }

        public Criteria andDeleteflagIn(List<Integer> values) {
            addCriterion("deleteflag in", values, "deleteflag");
            return (Criteria) this;
        }

        public Criteria andDeleteflagNotIn(List<Integer> values) {
            addCriterion("deleteflag not in", values, "deleteflag");
            return (Criteria) this;
        }

        public Criteria andDeleteflagBetween(Integer value1, Integer value2) {
            addCriterion("deleteflag between", value1, value2, "deleteflag");
            return (Criteria) this;
        }

        public Criteria andDeleteflagNotBetween(Integer value1, Integer value2) {
            addCriterion("deleteflag not between", value1, value2, "deleteflag");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table house_community_average_price
     *
     * @mbggenerated do_not_delete_during_merge Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table house_community_average_price
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}