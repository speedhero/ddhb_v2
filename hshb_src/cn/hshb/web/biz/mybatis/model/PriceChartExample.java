package cn.hshb.web.biz.mybatis.model;

import java.util.ArrayList;
import java.util.List;

public class PriceChartExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table price_chart
     *
     * @mbggenerated Thu Jul 23 11:53:25 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table price_chart
     *
     * @mbggenerated Thu Jul 23 11:53:25 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table price_chart
     *
     * @mbggenerated Thu Jul 23 11:53:25 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table price_chart
     *
     * @mbggenerated Thu Jul 23 11:53:25 CST 2015
     */
    public PriceChartExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table price_chart
     *
     * @mbggenerated Thu Jul 23 11:53:25 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table price_chart
     *
     * @mbggenerated Thu Jul 23 11:53:25 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table price_chart
     *
     * @mbggenerated Thu Jul 23 11:53:25 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table price_chart
     *
     * @mbggenerated Thu Jul 23 11:53:25 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table price_chart
     *
     * @mbggenerated Thu Jul 23 11:53:25 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table price_chart
     *
     * @mbggenerated Thu Jul 23 11:53:25 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table price_chart
     *
     * @mbggenerated Thu Jul 23 11:53:25 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table price_chart
     *
     * @mbggenerated Thu Jul 23 11:53:25 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table price_chart
     *
     * @mbggenerated Thu Jul 23 11:53:25 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table price_chart
     *
     * @mbggenerated Thu Jul 23 11:53:25 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table price_chart
     *
     * @mbggenerated Thu Jul 23 11:53:25 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDefaultIdIsNull() {
            addCriterion("default_id is null");
            return (Criteria) this;
        }

        public Criteria andDefaultIdIsNotNull() {
            addCriterion("default_id is not null");
            return (Criteria) this;
        }

        public Criteria andDefaultIdEqualTo(Integer value) {
            addCriterion("default_id =", value, "defaultId");
            return (Criteria) this;
        }

        public Criteria andDefaultIdNotEqualTo(Integer value) {
            addCriterion("default_id <>", value, "defaultId");
            return (Criteria) this;
        }

        public Criteria andDefaultIdGreaterThan(Integer value) {
            addCriterion("default_id >", value, "defaultId");
            return (Criteria) this;
        }

        public Criteria andDefaultIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("default_id >=", value, "defaultId");
            return (Criteria) this;
        }

        public Criteria andDefaultIdLessThan(Integer value) {
            addCriterion("default_id <", value, "defaultId");
            return (Criteria) this;
        }

        public Criteria andDefaultIdLessThanOrEqualTo(Integer value) {
            addCriterion("default_id <=", value, "defaultId");
            return (Criteria) this;
        }

        public Criteria andDefaultIdIn(List<Integer> values) {
            addCriterion("default_id in", values, "defaultId");
            return (Criteria) this;
        }

        public Criteria andDefaultIdNotIn(List<Integer> values) {
            addCriterion("default_id not in", values, "defaultId");
            return (Criteria) this;
        }

        public Criteria andDefaultIdBetween(Integer value1, Integer value2) {
            addCriterion("default_id between", value1, value2, "defaultId");
            return (Criteria) this;
        }

        public Criteria andDefaultIdNotBetween(Integer value1, Integer value2) {
            addCriterion("default_id not between", value1, value2, "defaultId");
            return (Criteria) this;
        }

        public Criteria andMedianListingIsNull() {
            addCriterion("median_listing is null");
            return (Criteria) this;
        }

        public Criteria andMedianListingIsNotNull() {
            addCriterion("median_listing is not null");
            return (Criteria) this;
        }

        public Criteria andMedianListingEqualTo(Double value) {
            addCriterion("median_listing =", value, "medianListing");
            return (Criteria) this;
        }

        public Criteria andMedianListingNotEqualTo(Double value) {
            addCriterion("median_listing <>", value, "medianListing");
            return (Criteria) this;
        }

        public Criteria andMedianListingGreaterThan(Double value) {
            addCriterion("median_listing >", value, "medianListing");
            return (Criteria) this;
        }

        public Criteria andMedianListingGreaterThanOrEqualTo(Double value) {
            addCriterion("median_listing >=", value, "medianListing");
            return (Criteria) this;
        }

        public Criteria andMedianListingLessThan(Double value) {
            addCriterion("median_listing <", value, "medianListing");
            return (Criteria) this;
        }

        public Criteria andMedianListingLessThanOrEqualTo(Double value) {
            addCriterion("median_listing <=", value, "medianListing");
            return (Criteria) this;
        }

        public Criteria andMedianListingIn(List<Double> values) {
            addCriterion("median_listing in", values, "medianListing");
            return (Criteria) this;
        }

        public Criteria andMedianListingNotIn(List<Double> values) {
            addCriterion("median_listing not in", values, "medianListing");
            return (Criteria) this;
        }

        public Criteria andMedianListingBetween(Double value1, Double value2) {
            addCriterion("median_listing between", value1, value2, "medianListing");
            return (Criteria) this;
        }

        public Criteria andMedianListingNotBetween(Double value1, Double value2) {
            addCriterion("median_listing not between", value1, value2, "medianListing");
            return (Criteria) this;
        }

        public Criteria andAverageTransactionPriceIsNull() {
            addCriterion("average_transaction_price is null");
            return (Criteria) this;
        }

        public Criteria andAverageTransactionPriceIsNotNull() {
            addCriterion("average_transaction_price is not null");
            return (Criteria) this;
        }

        public Criteria andAverageTransactionPriceEqualTo(Double value) {
            addCriterion("average_transaction_price =", value, "averageTransactionPrice");
            return (Criteria) this;
        }

        public Criteria andAverageTransactionPriceNotEqualTo(Double value) {
            addCriterion("average_transaction_price <>", value, "averageTransactionPrice");
            return (Criteria) this;
        }

        public Criteria andAverageTransactionPriceGreaterThan(Double value) {
            addCriterion("average_transaction_price >", value, "averageTransactionPrice");
            return (Criteria) this;
        }

        public Criteria andAverageTransactionPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("average_transaction_price >=", value, "averageTransactionPrice");
            return (Criteria) this;
        }

        public Criteria andAverageTransactionPriceLessThan(Double value) {
            addCriterion("average_transaction_price <", value, "averageTransactionPrice");
            return (Criteria) this;
        }

        public Criteria andAverageTransactionPriceLessThanOrEqualTo(Double value) {
            addCriterion("average_transaction_price <=", value, "averageTransactionPrice");
            return (Criteria) this;
        }

        public Criteria andAverageTransactionPriceIn(List<Double> values) {
            addCriterion("average_transaction_price in", values, "averageTransactionPrice");
            return (Criteria) this;
        }

        public Criteria andAverageTransactionPriceNotIn(List<Double> values) {
            addCriterion("average_transaction_price not in", values, "averageTransactionPrice");
            return (Criteria) this;
        }

        public Criteria andAverageTransactionPriceBetween(Double value1, Double value2) {
            addCriterion("average_transaction_price between", value1, value2, "averageTransactionPrice");
            return (Criteria) this;
        }

        public Criteria andAverageTransactionPriceNotBetween(Double value1, Double value2) {
            addCriterion("average_transaction_price not between", value1, value2, "averageTransactionPrice");
            return (Criteria) this;
        }

        public Criteria andVolumeIsNull() {
            addCriterion("volume is null");
            return (Criteria) this;
        }

        public Criteria andVolumeIsNotNull() {
            addCriterion("volume is not null");
            return (Criteria) this;
        }

        public Criteria andVolumeEqualTo(Double value) {
            addCriterion("volume =", value, "volume");
            return (Criteria) this;
        }

        public Criteria andVolumeNotEqualTo(Double value) {
            addCriterion("volume <>", value, "volume");
            return (Criteria) this;
        }

        public Criteria andVolumeGreaterThan(Double value) {
            addCriterion("volume >", value, "volume");
            return (Criteria) this;
        }

        public Criteria andVolumeGreaterThanOrEqualTo(Double value) {
            addCriterion("volume >=", value, "volume");
            return (Criteria) this;
        }

        public Criteria andVolumeLessThan(Double value) {
            addCriterion("volume <", value, "volume");
            return (Criteria) this;
        }

        public Criteria andVolumeLessThanOrEqualTo(Double value) {
            addCriterion("volume <=", value, "volume");
            return (Criteria) this;
        }

        public Criteria andVolumeIn(List<Double> values) {
            addCriterion("volume in", values, "volume");
            return (Criteria) this;
        }

        public Criteria andVolumeNotIn(List<Double> values) {
            addCriterion("volume not in", values, "volume");
            return (Criteria) this;
        }

        public Criteria andVolumeBetween(Double value1, Double value2) {
            addCriterion("volume between", value1, value2, "volume");
            return (Criteria) this;
        }

        public Criteria andVolumeNotBetween(Double value1, Double value2) {
            addCriterion("volume not between", value1, value2, "volume");
            return (Criteria) this;
        }

        public Criteria andCurrentDateIsNull() {
            addCriterion("current_date is null");
            return (Criteria) this;
        }

        public Criteria andCurrentDateIsNotNull() {
            addCriterion("current_date is not null");
            return (Criteria) this;
        }

        public Criteria andCurrentDateEqualTo(String value) {
            addCriterion("current_date =", value, "currentDate");
            return (Criteria) this;
        }

        public Criteria andCurrentDateNotEqualTo(String value) {
            addCriterion("current_date <>", value, "currentDate");
            return (Criteria) this;
        }

        public Criteria andCurrentDateGreaterThan(String value) {
            addCriterion("current_date >", value, "currentDate");
            return (Criteria) this;
        }

        public Criteria andCurrentDateGreaterThanOrEqualTo(String value) {
            addCriterion("current_date >=", value, "currentDate");
            return (Criteria) this;
        }

        public Criteria andCurrentDateLessThan(String value) {
            addCriterion("current_date <", value, "currentDate");
            return (Criteria) this;
        }

        public Criteria andCurrentDateLessThanOrEqualTo(String value) {
            addCriterion("current_date <=", value, "currentDate");
            return (Criteria) this;
        }

        public Criteria andCurrentDateLike(String value) {
            addCriterion("current_date like", value, "currentDate");
            return (Criteria) this;
        }

        public Criteria andCurrentDateNotLike(String value) {
            addCriterion("current_date not like", value, "currentDate");
            return (Criteria) this;
        }

        public Criteria andCurrentDateIn(List<String> values) {
            addCriterion("current_date in", values, "currentDate");
            return (Criteria) this;
        }

        public Criteria andCurrentDateNotIn(List<String> values) {
            addCriterion("current_date not in", values, "currentDate");
            return (Criteria) this;
        }

        public Criteria andCurrentDateBetween(String value1, String value2) {
            addCriterion("current_date between", value1, value2, "currentDate");
            return (Criteria) this;
        }

        public Criteria andCurrentDateNotBetween(String value1, String value2) {
            addCriterion("current_date not between", value1, value2, "currentDate");
            return (Criteria) this;
        }

        public Criteria andHouseTypeIsNull() {
            addCriterion("house_type is null");
            return (Criteria) this;
        }

        public Criteria andHouseTypeIsNotNull() {
            addCriterion("house_type is not null");
            return (Criteria) this;
        }

        public Criteria andHouseTypeEqualTo(Integer value) {
            addCriterion("house_type =", value, "houseType");
            return (Criteria) this;
        }

        public Criteria andHouseTypeNotEqualTo(Integer value) {
            addCriterion("house_type <>", value, "houseType");
            return (Criteria) this;
        }

        public Criteria andHouseTypeGreaterThan(Integer value) {
            addCriterion("house_type >", value, "houseType");
            return (Criteria) this;
        }

        public Criteria andHouseTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("house_type >=", value, "houseType");
            return (Criteria) this;
        }

        public Criteria andHouseTypeLessThan(Integer value) {
            addCriterion("house_type <", value, "houseType");
            return (Criteria) this;
        }

        public Criteria andHouseTypeLessThanOrEqualTo(Integer value) {
            addCriterion("house_type <=", value, "houseType");
            return (Criteria) this;
        }

        public Criteria andHouseTypeIn(List<Integer> values) {
            addCriterion("house_type in", values, "houseType");
            return (Criteria) this;
        }

        public Criteria andHouseTypeNotIn(List<Integer> values) {
            addCriterion("house_type not in", values, "houseType");
            return (Criteria) this;
        }

        public Criteria andHouseTypeBetween(Integer value1, Integer value2) {
            addCriterion("house_type between", value1, value2, "houseType");
            return (Criteria) this;
        }

        public Criteria andHouseTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("house_type not between", value1, value2, "houseType");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table price_chart
     *
     * @mbggenerated do_not_delete_during_merge Thu Jul 23 11:53:25 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table price_chart
     *
     * @mbggenerated Thu Jul 23 11:53:25 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}