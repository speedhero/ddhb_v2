package cn.hshb.web.biz.mybatis.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class UserBrowsedHistoryExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_browsed_history
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_browsed_history
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_browsed_history
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_browsed_history
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public UserBrowsedHistoryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_browsed_history
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_browsed_history
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_browsed_history
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_browsed_history
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_browsed_history
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_browsed_history
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_browsed_history
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_browsed_history
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_browsed_history
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_browsed_history
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_browsed_history
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andSecondHandHouseIsNull() {
            addCriterion("second_hand_house is null");
            return (Criteria) this;
        }

        public Criteria andSecondHandHouseIsNotNull() {
            addCriterion("second_hand_house is not null");
            return (Criteria) this;
        }

        public Criteria andSecondHandHouseEqualTo(String value) {
            addCriterion("second_hand_house =", value, "secondHandHouse");
            return (Criteria) this;
        }

        public Criteria andSecondHandHouseNotEqualTo(String value) {
            addCriterion("second_hand_house <>", value, "secondHandHouse");
            return (Criteria) this;
        }

        public Criteria andSecondHandHouseGreaterThan(String value) {
            addCriterion("second_hand_house >", value, "secondHandHouse");
            return (Criteria) this;
        }

        public Criteria andSecondHandHouseGreaterThanOrEqualTo(String value) {
            addCriterion("second_hand_house >=", value, "secondHandHouse");
            return (Criteria) this;
        }

        public Criteria andSecondHandHouseLessThan(String value) {
            addCriterion("second_hand_house <", value, "secondHandHouse");
            return (Criteria) this;
        }

        public Criteria andSecondHandHouseLessThanOrEqualTo(String value) {
            addCriterion("second_hand_house <=", value, "secondHandHouse");
            return (Criteria) this;
        }

        public Criteria andSecondHandHouseLike(String value) {
            addCriterion("second_hand_house like", value, "secondHandHouse");
            return (Criteria) this;
        }

        public Criteria andSecondHandHouseNotLike(String value) {
            addCriterion("second_hand_house not like", value, "secondHandHouse");
            return (Criteria) this;
        }

        public Criteria andSecondHandHouseIn(List<String> values) {
            addCriterion("second_hand_house in", values, "secondHandHouse");
            return (Criteria) this;
        }

        public Criteria andSecondHandHouseNotIn(List<String> values) {
            addCriterion("second_hand_house not in", values, "secondHandHouse");
            return (Criteria) this;
        }

        public Criteria andSecondHandHouseBetween(String value1, String value2) {
            addCriterion("second_hand_house between", value1, value2, "secondHandHouse");
            return (Criteria) this;
        }

        public Criteria andSecondHandHouseNotBetween(String value1, String value2) {
            addCriterion("second_hand_house not between", value1, value2, "secondHandHouse");
            return (Criteria) this;
        }

        public Criteria andRentHouseIsNull() {
            addCriterion("rent_house is null");
            return (Criteria) this;
        }

        public Criteria andRentHouseIsNotNull() {
            addCriterion("rent_house is not null");
            return (Criteria) this;
        }

        public Criteria andRentHouseEqualTo(String value) {
            addCriterion("rent_house =", value, "rentHouse");
            return (Criteria) this;
        }

        public Criteria andRentHouseNotEqualTo(String value) {
            addCriterion("rent_house <>", value, "rentHouse");
            return (Criteria) this;
        }

        public Criteria andRentHouseGreaterThan(String value) {
            addCriterion("rent_house >", value, "rentHouse");
            return (Criteria) this;
        }

        public Criteria andRentHouseGreaterThanOrEqualTo(String value) {
            addCriterion("rent_house >=", value, "rentHouse");
            return (Criteria) this;
        }

        public Criteria andRentHouseLessThan(String value) {
            addCriterion("rent_house <", value, "rentHouse");
            return (Criteria) this;
        }

        public Criteria andRentHouseLessThanOrEqualTo(String value) {
            addCriterion("rent_house <=", value, "rentHouse");
            return (Criteria) this;
        }

        public Criteria andRentHouseLike(String value) {
            addCriterion("rent_house like", value, "rentHouse");
            return (Criteria) this;
        }

        public Criteria andRentHouseNotLike(String value) {
            addCriterion("rent_house not like", value, "rentHouse");
            return (Criteria) this;
        }

        public Criteria andRentHouseIn(List<String> values) {
            addCriterion("rent_house in", values, "rentHouse");
            return (Criteria) this;
        }

        public Criteria andRentHouseNotIn(List<String> values) {
            addCriterion("rent_house not in", values, "rentHouse");
            return (Criteria) this;
        }

        public Criteria andRentHouseBetween(String value1, String value2) {
            addCriterion("rent_house between", value1, value2, "rentHouse");
            return (Criteria) this;
        }

        public Criteria andRentHouseNotBetween(String value1, String value2) {
            addCriterion("rent_house not between", value1, value2, "rentHouse");
            return (Criteria) this;
        }

        public Criteria andCommunityIsNull() {
            addCriterion("community is null");
            return (Criteria) this;
        }

        public Criteria andCommunityIsNotNull() {
            addCriterion("community is not null");
            return (Criteria) this;
        }

        public Criteria andCommunityEqualTo(String value) {
            addCriterion("community =", value, "community");
            return (Criteria) this;
        }

        public Criteria andCommunityNotEqualTo(String value) {
            addCriterion("community <>", value, "community");
            return (Criteria) this;
        }

        public Criteria andCommunityGreaterThan(String value) {
            addCriterion("community >", value, "community");
            return (Criteria) this;
        }

        public Criteria andCommunityGreaterThanOrEqualTo(String value) {
            addCriterion("community >=", value, "community");
            return (Criteria) this;
        }

        public Criteria andCommunityLessThan(String value) {
            addCriterion("community <", value, "community");
            return (Criteria) this;
        }

        public Criteria andCommunityLessThanOrEqualTo(String value) {
            addCriterion("community <=", value, "community");
            return (Criteria) this;
        }

        public Criteria andCommunityLike(String value) {
            addCriterion("community like", value, "community");
            return (Criteria) this;
        }

        public Criteria andCommunityNotLike(String value) {
            addCriterion("community not like", value, "community");
            return (Criteria) this;
        }

        public Criteria andCommunityIn(List<String> values) {
            addCriterion("community in", values, "community");
            return (Criteria) this;
        }

        public Criteria andCommunityNotIn(List<String> values) {
            addCriterion("community not in", values, "community");
            return (Criteria) this;
        }

        public Criteria andCommunityBetween(String value1, String value2) {
            addCriterion("community between", value1, value2, "community");
            return (Criteria) this;
        }

        public Criteria andCommunityNotBetween(String value1, String value2) {
            addCriterion("community not between", value1, value2, "community");
            return (Criteria) this;
        }

        public Criteria andLastBrowseTimeIsNull() {
            addCriterion("last_browse_time is null");
            return (Criteria) this;
        }

        public Criteria andLastBrowseTimeIsNotNull() {
            addCriterion("last_browse_time is not null");
            return (Criteria) this;
        }

        public Criteria andLastBrowseTimeEqualTo(Date value) {
            addCriterionForJDBCDate("last_browse_time =", value, "lastBrowseTime");
            return (Criteria) this;
        }

        public Criteria andLastBrowseTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("last_browse_time <>", value, "lastBrowseTime");
            return (Criteria) this;
        }

        public Criteria andLastBrowseTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("last_browse_time >", value, "lastBrowseTime");
            return (Criteria) this;
        }

        public Criteria andLastBrowseTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("last_browse_time >=", value, "lastBrowseTime");
            return (Criteria) this;
        }

        public Criteria andLastBrowseTimeLessThan(Date value) {
            addCriterionForJDBCDate("last_browse_time <", value, "lastBrowseTime");
            return (Criteria) this;
        }

        public Criteria andLastBrowseTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("last_browse_time <=", value, "lastBrowseTime");
            return (Criteria) this;
        }

        public Criteria andLastBrowseTimeIn(List<Date> values) {
            addCriterionForJDBCDate("last_browse_time in", values, "lastBrowseTime");
            return (Criteria) this;
        }

        public Criteria andLastBrowseTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("last_browse_time not in", values, "lastBrowseTime");
            return (Criteria) this;
        }

        public Criteria andLastBrowseTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("last_browse_time between", value1, value2, "lastBrowseTime");
            return (Criteria) this;
        }

        public Criteria andLastBrowseTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("last_browse_time not between", value1, value2, "lastBrowseTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_browsed_history
     *
     * @mbggenerated do_not_delete_during_merge Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_browsed_history
     *
     * @mbggenerated Wed Jul 08 19:17:40 GMT+08:00 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}